{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","getMovies","a","fetch","response","json","FindMovie","addMovie","useState","setTitle","setMovie","getMovieFromServer","movieTitle","serverMovie","Title","Plot","Poster","imdbID","htmlFor","type","value","id","placeholder","onChange","event","word","preventDefault","target","onClick","App","React","moviesFromServer","setMovies","newMovie","includes","ReactDOM","render","document","getElementById"],"mappings":"wxEAKaA,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,MAII,IAHJC,mBAGI,MAHU,GAGV,EAFJC,EAEI,EAFJA,OACAC,EACI,EADJA,QAEA,OAAKH,EAKH,mCACE,sBAAKI,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,6BAhCD,MCJEK,EAA8B,SAAC,GAAD,QACzCC,cADyC,MAChC,GADgC,SAGzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,uBCXfC,G,MAAS,uCAAG,WAAOb,GAAP,eAAAc,EAAA,sEACAC,MAAM,GAAD,OAHd,sDAGc,eAAkBf,EAAlB,MADL,cACjBgB,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,uDCQTC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOpB,EAAP,KAAcqB,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOT,EAAP,KAAcW,EAAd,KAMMC,EAAkB,uCAAG,WAAOC,GAAP,eAAAV,EAAA,sEACcD,EAAUW,GADxB,OACnBC,EADmB,OAGzBJ,EAAS,IAETC,EAAS,CACPtB,MAAOyB,EAAYC,MACnBzB,YAAawB,EAAYE,KACzBzB,OAAQuB,EAAYG,OACpBzB,QAAQ,4BAAD,OAA8BsB,EAAYI,QACjDjB,OAAQa,EAAYI,SAVG,2CAAH,sDAcxB,OACE,qCACE,uBAAMzB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ0B,QAAQ,cAAjC,yBAIA,qBAAK1B,UAAU,UAAf,SACE,uBACE2B,KAAK,OACLC,MAAOhC,EACPiC,GAAG,cACHC,YAAY,0BACZ9B,UAAU,kBACV+B,SAAU,SAACC,GAjCH,IAACC,EAkCPD,EAAME,iBAlCCD,EAmCKD,EAAMG,OAAOP,MAlCrCX,EAASgB,QAuCH,mBAAGjC,UAAU,iBAAb,qDAKF,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE2B,KAAK,SACL3B,UAAU,kBACVoC,QAAS,kBAAMjB,EAAmBvB,IAHpC,4BASF,qBAAKI,UAAU,UAAf,SACE,wBACE2B,KAAK,SACL3B,UAAU,oBACVoC,QAAS,kBAAMrB,EAASR,IAH1B,qCAULA,GAASA,EAAMX,OACd,sBAAKI,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,eAAeO,W,QC9EZ8B,EAAe,WAC1B,MAA4BC,IAAMtB,SAAN,YAAmBuB,IAA/C,mBAAOlC,EAAP,KAAemC,EAAf,KAcA,OACE,sBAAKxC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAWe,SAlBA,SAAC0B,GACXA,IAIDpC,EAAOqC,SAASD,IAAcA,GAIlCD,EAAU,CAACC,GAAF,mBAAepC,cCd5BsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.49ef937f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => {\n  if (!title) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\">{title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {description}\n            <br />\n            <a href={imdbUrl}>IMDB</a>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","const API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=e5d0e44d';\n\nexport const getMovies = async (title: string) => {\n  const response = await fetch(`${API_URL}&t=[${title}]`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovies } from '../../api/api';\n\ntype Props = {\n  addMovie: (newMovie: Movie | null) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const titleChange = (word: string) => {\n    setTitle(word);\n  };\n\n  const getMovieFromServer = async (movieTitle: string) => {\n    const serverMovie: ServerMovie = await getMovies(movieTitle);\n\n    setTitle('');\n\n    setMovie({\n      title: serverMovie.Title,\n      description: serverMovie.Plot,\n      imgUrl: serverMovie.Poster,\n      imdbUrl: `https://m.imdb.com/title/${serverMovie.imdbID}`,\n      imdbId: serverMovie.imdbID,\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={title}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              onChange={(event) => {\n                event.preventDefault();\n                titleChange(event.target.value);\n              }}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => getMovieFromServer(title)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovie(movie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {movie && movie.title && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App:React.FC = () => {\n  const [movies, setMovies] = React.useState([...moviesFromServer]);\n\n  const addMovie = (newMovie: Movie | null) => {\n    if (!newMovie) {\n      return;\n    }\n\n    if (movies.includes(newMovie) || !newMovie) {\n      return;\n    }\n\n    setMovies([newMovie, ...movies]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}